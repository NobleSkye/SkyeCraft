name: Go Cross-Platform Build

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: ['1.23.0']

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ matrix.go-version }}-

    - name: Install dependencies
      run: go mod download

    - name: Build for ${{ matrix.os }}
      run: |
        echo "Starting build for $RUNNER_OS..."
        if [[ "$RUNNER_OS" == "Linux" ]]; then
          GOOS=linux GOARCH=amd64 go build -o builds/SkyeCraft-linux
        elif [[ "$RUNNER_OS" == "macOS" ]]; then
          GOOS=darwin GOARCH=amd64 go build -o builds/SkyeCraft-macOS
        elif [[ "$RUNNER_OS" == "Windows" ]]; then
          GOOS=windows GOARCH=amd64 go build -ldflags="-H windowsgui" -o builds/SkyeCraft.exe
        fi
        echo "Build completed for $RUNNER_OS."
      shell: bash

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: SkyeCraft
        path: builds/

    - name: Print build folder contents
      run: |
        echo "Listing contents of builds/ folder"
        ls -la builds/

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.${{ github.run_number }}
        release_name: "SkyeCraft Release v1.0.${{ github.run_number }}"
        draft: false
        prerelease: false

    - name: Upload SkyeCraft-macOS binary
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: builds/SkyeCraft-macOS
        asset_name: SkyeCraft-macOS
        asset_content_type: application/octet-stream

    - name: Upload SkyeCraft-linux binary
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: builds/SkyeCraft-linux
        asset_name: SkyeCraft-linux
        asset_content_type: application/octet-stream

    - name: Upload SkyeCraft.exe binary
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: builds/SkyeCraft.exe
        asset_name: SkyeCraft.exe
        asset_content_type: application/octet-stream
